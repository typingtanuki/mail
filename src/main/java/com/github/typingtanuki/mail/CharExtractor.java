/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package com.github.typingtanuki.mail;

import java.util.List;

import static com.github.typingtanuki.mail.Formatter.finished;
import static com.github.typingtanuki.mail.Formatter.progress;

public class CharExtractor {
    private final ChainCounter[] counters;

    public CharExtractor(int maxLength) {
        counters = new ChainCounter[maxLength];
        for (int i = 0; i < maxLength; i++) {
            counters[i] = new ChainCounter(i + 1);
        }
    }

    public void process(List<String> lines) {
        StringBuilder chain = new StringBuilder();
        for (String line : lines) {
            for (char c : line.strip().toCharArray()) {
                String s = String.valueOf(c);
                if (Character.isIdeographic(c) && isInteresting(c)) {
                    for (ChainCounter counter : counters) {
                        counter.countFor(chain, s);
                    }

                    chain.append(s);
                } else {
                    chain.setLength(0);
                }
            }
        }
    }

    public void display() {
        consolidate();

        for (ChainCounter counter : counters) {
            counter.display();
        }
    }

    private boolean isInteresting(char c) {
        return c != '厂' &&
                c != '〇' &&
                c != '　';
    }

    private void consolidate() {
        progress("Consolidating...");
        ChainCounter prev = null;
        for (int i =  counters.length - 1; i >= 0; i--) {
            progress(i + "...");
            ChainCounter counter = counters[i];
            counter.consolidate(prev);
            prev = counter;
        }
        finished();
    }
}
